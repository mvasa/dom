Clojure
(if 'x 3 7)
3
(if nil 3 7)
7
(< 2 1)
false
(if (> 2 3 ) 17)
nil
(if (> 2 3) (do(println "true case")17)
	    (do(println "false case")23))
false case
23
(or false nil 3)
3

comments
;what?
(def x [1 2 3 5])
(if x 3 5)
3

maps
'(1 2 3)
(1 2 3)
=============================================================================================================================================================================================================================================================================================================
(first '(1 2 3))
1

(first [1 2 3])
1

(nth [1 2 3] 2)
3

(get { :a "ape" :b "bison" :c "cow" } :b)
"bison"

(vector 1 2 3 4)
[1 2 3 4]

(conj [1 2 3 4] 7)
[1 2 3 4 7]

(conj '(1 2 3 4) 7)
(7 1 2 3 4)

(peek [1 2 3 4])
4

(peek '(1 2 3 4))
1

(pop[1 2 3 4])
[1 2 3]